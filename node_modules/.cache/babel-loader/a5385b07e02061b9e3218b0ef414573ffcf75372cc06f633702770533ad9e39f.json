{"ast":null,"code":"var _jsxFileName = \"/home/vunguyen/web_admin/src/screens/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Chart, CategoryScale, LinearScale, LineElement, PointElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, LineElement, PointElement);\nconst ChartComponent = () => {\n  _s();\n  const chartRef = useRef(null);\n  const [stransactionHistory, setStransactionHistory] = useState([]);\n  const [sumWeek, setSumWeek] = useState([]);\n  const [sumMonth, setSumMonth] = useState([]);\n  const [dayOfWeek, setDayOfWeek] = useState([]);\n  const [month, setMonth] = useState([]);\n  useEffect(() => {\n    const getTransaction = async () => {\n      try {\n        const result = await fetch('http://localhost:3001/transactions');\n        const response = await result.json();\n        if (response.status == true) {\n          const data = setStransactionHistory(response.data);\n        }\n        ;\n        return null;\n      } catch (error) {\n        console.log('Get transaction error: ', error.message);\n      }\n    };\n    getTransaction();\n  }, []);\n  const data = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    datasets: [{\n      label: 'Sales',\n      data: [65, 59, 80, 81, 56, 55, 40, 65, 59, 80, 81, 56],\n      fill: false,\n      backgroundColor: 'rgb(255, 99, 132)',\n      borderColor: 'rgba(255, 99, 132, 0.2)'\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Month'\n        }\n      },\n      y: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Sales'\n        }\n      }\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Monthly Sales'\n      }\n    },\n    width: '100%'\n  };\n  useEffect(() => {\n    const chart = chartRef.current;\n    return () => chart === null || chart === void 0 ? void 0 : chart.destroy();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Line, {\n    ref: chartRef,\n    data: data,\n    options: options,\n    style: {\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n};\n_s(ChartComponent, \"HOwjwLLbwKmzZ15Lkj7s7628Na8=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Chart","CategoryScale","LinearScale","LineElement","PointElement","Line","jsxDEV","_jsxDEV","register","ChartComponent","_s","chartRef","stransactionHistory","setStransactionHistory","sumWeek","setSumWeek","sumMonth","setSumMonth","dayOfWeek","setDayOfWeek","month","setMonth","getTransaction","result","fetch","response","json","status","data","error","console","log","message","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","x","type","title","display","text","y","plugins","width","chart","current","destroy","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vunguyen/web_admin/src/screens/ChartComponent.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Chart, CategoryScale, LinearScale, LineElement, PointElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChart.register(CategoryScale, LinearScale, LineElement, PointElement);\n\nconst ChartComponent = () => {\n  const chartRef = useRef(null);\n\n  const [stransactionHistory, setStransactionHistory] = useState([]);\n  const [sumWeek, setSumWeek] = useState([]);\n  const [sumMonth, setSumMonth] = useState([]);\n  const [dayOfWeek, setDayOfWeek] = useState([]);\n  const [month, setMonth] = useState([]);\n\n  useEffect(() => {\n    const getTransaction = async () => {\n      try {\n        const result = await fetch('http://localhost:3001/transactions');\n        const response = await result.json();\n        if (response.status == true) {\n            const data = \n          setStransactionHistory(response.data)\n        };\n        return null;\n      } catch (error) {\n        console.log('Get transaction error: ', error.message);\n      }\n    }\n    getTransaction();\n  }, []);\n\n  const data = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    datasets: [\n      {\n        label: 'Sales',\n        data: [65, 59, 80, 81, 56, 55, 40, 65, 59, 80, 81, 56],\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Month',\n        },\n      },\n      y: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Sales',\n        },\n      },\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Monthly Sales',\n      },\n    },\n    width: '100%'\n  };\n\n  useEffect(() => {\n    const chart = chartRef.current;\n    return () => chart?.destroy();\n  }, []);\n\n  return <Line ref={chartRef} data={data} options={options} style={{ width: '100%' }} />;\n};\n\nexport default ChartComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}